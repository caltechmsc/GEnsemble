                        README file for VMD 1.8.6
---------------------------------------------------------------------------

What is VMD?            See also http://www.ks.uiuc.edu/Research/vmd/
---------------------------------------------------------------------
  VMD is designed for the visualization and analysis of biological
systems such as proteins, nucleic acids, lipid bilayer assemblies,
etc.  It may be used to view more general molecules, as VMD can read
standard Protein Data Bank (PDB) files and display the contained
structure.  VMD provides a wide variety of methods for rendering and
coloring molecule.  VMD can be used to animate and analyze the trajectory 
of molecular dynamics (MD) simulations, and can interactively manipulate
molecules being simulated on remote computers (Interactive MD).

VMD has many features, which include:
  o No limit on the number of molecules, atoms, residues or
    number of animation frames, except available memory.

  o Many molecular and volumetric rendering and coloring methods.

  o Extensive atom selection language with boolean and algebraic operators, 
    regular expressions, distance based selections, and more.

  o Extensive graphical and text interfaces to Tcl, Tk, and Python 
    to provide powerful scripting and analysis capabilities.

  o High-quality on-screen rendering using OpenGL programmable shading on
    advanced graphics accelerators.

  o Stereoscopic display with shutter glasses, autostereoscopic flat panels,
    anaglyph stereo glasses, and side-by-side stereo viewing.

  o 3-D interactive control through the use of joysticks, Spaceballs,
    haptic devices and other advanced input devices, with support for
    Virtual Reality Peripheral Network (VRPN).

  o An extensible plugin-based file loading system with support for
    popular formats such as AMBER, CHARMM, Gromacs, NAMD, PDB, X-PLOR,
    and many others, as well as automatic conversion through Babel. 

  o Export displayed scene to extenal rendering formats including POV-Ray, 
    Raster3D, RenderMan, Gelato, Tachyon, Wavefront, as well 
    as STL or VRML2 files for 3-D printing.

  o Integration of multiple sequence alignment and evolutionary 
    analysis tools, in the form of the Multiseq plugin and its
    related toolset.

  o Perform interactive molecular dynamics (IMD) simulations using 
    NAMD, Protomol, or other programs as simulation back-ends.    

  o Integration with the program NAMD, a fast, parallel, and scalable
    molecular dynamics program developed in conjunction with VMD.
    See the NAMD page for details: http://www.ks.uiuc.edu/Research/namd

  o Integration with the BioCoRE collaborative research environment.
    VMD can "publish" molecular graphics scripts to BioCoRE, so that
    collaborators can work together over the internet.
    See the BioCoRE page for details: http://www.ks.uiuc.edu/Research/biocore


What's new in VMD 1.8.6?
------------------------
  User documentation updates
    o Minor improvements and corrections to the VMD User's Guide,
      added documentation for new commands and environment variables.
    o New and updated tutorials available for advanced images and movie making, 
      3-D PDF export, Tachyon ambient occlusion lighting,
      electrostatic surface coloring, and density map based atom selections.

  User interface changes
    o New "User" picking mode for use with user defined scripts and plugins

  General Improvements
    o Support for 3-D capture with Acrobat 3-D, for creation of 
      documents which embed 3-D molecular structures. 
    o VMD renderings can now use Tachyon's advanced ambient occlusion lighting
      for tremendously improved 3-D renderings of molecular graphics.
      This advanced lighting mode can greatly enhance the shading of 
      pores and channels, structures with cavities, and other cases which
      typically require the use of depth cueing for better depth perception.
    o VMD now supports the nVidia "Gelato" GPU-accelerated 
      production quality rendering package.  VMD exports scenes in 
      Gelato's native PYG file format, as well as the RenderMan RIB format.
    o By default VMD will now use all of the available processors to
      accelerate parallelized portions of the code which currently include
      several structure analysis routines, Interactive MD, and ray tracing.
    o Overall per-atom memory use has been significantly decreased.  
      VMD now uses just over half as much memory per atom compared with 
      previous versions, leaving more space available for additional 
      trajectory frames or for more molecules to be loaded at once.
    o VMD structure loading and analysis scalability have been 
      significantly improved.  VMD has been successfully tested
      loading and analyzing structures of up to 72,000,000 atoms.
    o Automatic bond determination algorithm now runs up to 3 times
      faster on single processor systems, and uses multiple processors 
      for improved performance on multicore processors and multiprocessor
      workstations.
    o Drastically improved multi-thousand-file structure loading 
      performance when display update is disabled.  This benefits
      batch mode VMD analysis jobs involving analysis of thousands 
      of structures, e.g. loading and searching large subsets of the PDB.

  New representations and display features
    o Updated implementation of "GLSL" OpenGL programmable shading rendering
      mode now matches the standard rendering mode much more closely and
      has increased shading performance by up to 30%.
    o New "FieldLines" representation for display of potential field lines,
      and other volumetric gradient or flow information extracted from
      volumetric density maps.
    o Improved analysis and display of nucleic acid structures
    o Volume slice representations and coloring by volumetric data
      are now 20 to 30 times faster in most cases
    o New gradient background feature allows the background color to be drawn
      with a smoothly shaded vertical gradient.  This can be useful
      in live presentations, where the VMD background gradient can be 
      matched to PowerPoint slides being shown simultaneously on a second
      screen.
    o Newly developed scene export for the NVIDIA Gelato 
      GPU-accelerated final frame rendering system.
    o New Tachyon scene file format and VMD scene export feature  
      reduces scene file sizes to one tenth of of the size created 
      by prior versions of VMD and Tachyon.  This is particularly 
      beneficial for renderings of large MSMS, Surf, Isosurface,
      NewRibbons, and NewCartoon representations.
    o Greatly improved RenderMan RIB format scene export capability 
      matches on-screen lighting and display much more closely.
    o Trajectory playback performance up to 2x faster on some machines 
      with very large structures and simple representations.

  New and improved analysis commands
    o New volmap 'coulomb' potential map calculation command calculates
      the electrostatic field for the supplied atom selection.  The
      implementation is multithreaded, and also supports NVIDIA CUDA
      GPU acceleration in VMD binaries compiled with CUDA support.
    o New 'mol bondsrecalc' command allows forced recalculation of bonds
      based on the current timestep.
    o New 'measure energy' command, with bond, angle, dihed, imprp, vdw, 
      and elect terms, based on the CHARMM force field.  Allows energies
      to be computed over a range of trajectory frames.
    o New 'measure' commands for more efficient evaluation of bond lengths,
      angles, dihedrals, and impropers over a range of trajectory frames.
    o The "measure fit" RMS fitting command now runs up to two times faster 
      than previous versions of VMD.
    o The "$sel move" atom selection subcommand for moving selections now
      runs up to two times faster than previous versions of VMD in the most 
      common cases.
    o Added a new "-withradii" parameter to the "measure minmax" command 
      to optionally calculate the bounding box that encloses the entire 
      extents of the molecule, rather than just the atom centers.
    o Improved the performance of "measure minmax" by a factor of two.
    o Added -debye and -elementary dipole moment units flags to the 
      "measure dipole" command for improved ease of use. Default mode 
      remains -elementary for backwards compatibility.

  Other features and improvements
    o Added new commands implementing a built-in VMD 
      collaboration/remote-control mechanism similar to the "vmdcollab" 
      Tcl scripts, but in the low-level event loop
    o New VMDFORCECPUCOUNT environment variable allows users to override
      the default behavior of VMD to force it to use a subset or superset
      of the available number of processors to aid in multiprocessor 
      performance tuning and testing.
    o Added event filtering logic to the Spaceball interface to prevent 
      VMD from acting on null motion event packets on Win32.
    o Added new routines to query the number of megabytes of unused system
      memory, and total system memory. On systems that support the syscalls
      that query the stats, these functions can be used to warn the user if
      they are about to load a trajectory that's far too large to fit into
      the remaining physical memory.

  New and improved plugins and extensions
    o New "dowser" plugin adds solvent for DNA and RNA structures
      using the external program Dowser, by Jan Hermans of UNC.
    o BioCoRE chat plugin: misc user interface improvements
    o cgtools: new graphical user interface for coarse graining plugin.
      The new version supports both shape based and residue based methods,
      and can work with Cryo-EM density maps as input.
    o molefacture: numerous bug fixes, scalability, and performance 
      improvements
    o multiplot: automatic color cycling, improved predefined colors, 
      allow drawing of arbitrary items into the multiplot Tk canvas.
      Add multiplot legends to exported xmgrace plot files.
      (Jerome Henin's patch)
    o paratool: many small bug fixes and improvements
    o psfgen: Extend PSF_RECORD_LENGTH to not cut off long file 
      names in remarks.
    o qmtool: many small bug fixes and improvements
    o solvate: will automatically switch to a hexadecimal segname generation
      scheme when too many segments would be created for the max segname 
      string length.  Solvate now calls resetpsf to free memory prior to 
      loading the newly created water box, in order to save memory.
    o timeline: applied Charles McCallum's patch to improve the match 
      between timeline secondary structure coloring and the VMD structure 
      representation change color of 3_10 helices to blue as suggested 
      by Charles Mccallum (and synced with new timeline plugin coloring)
    o VDNA plugin: Now supports options to include random variations in 
      1) the linker length and/or 2) the wrapping of DNA around the 
      histone core. This enables users to investigate the two-angle model 
      of chromatin as described as early as Woodcock PNAS 1993, 
      or Leuba PNAS 1994 or Helmut Schiessels work.

  New and improved file import and export
    o BRIX plugin now recognizes ".brx" extensions as well.
    o New CHARMM PBEQ potential map reader plugin
    o Updated CHARMM 31 expanded format PSF reading code to correctly read the
      atom type field.
    o Updated GAMESS plugin supports the new GAMESS_US version output 
      7-SEP-2006-(R4) properly.
    o Added support for reading and writing binary DX files.
      (Justin Gullingsrud's patch)
    o Improve the behavior of atom assignment
      in the LAMMPS dump reader plugin.  (Lutz Maibaum's patch)
    o mol2plugin: Remove autotyping. When this plugin was initially written 
      VMD didn't have anything resembling true autotyping, Now that the
      IDATM exists, the right way to do things is just write VMD's types.
    o Prevent long segment names from overflowing the PDB segname field.
      (Axel Kohlmeyer's patch)
    o Add CRYST1 parsing to the PQR plugin.  (Axel Kohlmeyer's patch)
    o Added support for reading binary UHBD grids. (Justin Gullingsrud's patch)
    o VASP potcar/poscar/chgcar plugins improvements to add
      "spin up" and "spin down" volume sets.  Fix reading potcar files.
      (Rob Lahaye's patch)
    o XYZ plugin now exports atomic element data when available
      (Axel Kohlmeyer's patch)

  Bug Fixes
    o Fixed processing of callbacks when "mol delete all" was called,
      invoking an optimized routine to delete molecules which helps 
      significantly when thousands of molecules are loaded.
    o Fixed a memory leak in the "sidechain" atom selection keyword
    o Fixed missing test for exclusion of H-H bonds in automatic bond 
      determination code.
    o Fixed occasional incorrect material property specification in
      RenderMan RIB files exported by VMD
    o Fixed a potential crash caused by a bug in the command string tokenizer
      used by AtomColor and AtomRep 
    o Force color regen when atomic number is updated
    o Force color regen and rep updates when an atom selection updates 
      the atomic element name field. 
    o MolFilePlugin now aborts loading a structure if namelist indices
      overflow or other data structure inconsistencies arise, 
      to prevent bad data from being used.

Known bugs
----------
  Visit the VMD page for information on known bugs, workarounds, and fixes:
    http://www.ks.uiuc.edu/Research/vmd/


Cost and Availability
---------------------
  BioCoRE, JMV, MDTools, NAMD, VMD and the Structural Biology Software
Database represent the broad efforts of the Theoretical and Computational 
Biophysics Group, an NIH Resource for Macromolecular Modeling and 
Bioinformatics, designed to develop and distribute free, effective tools 
(with source code) for molecular dynamics studies in structural biology.  
For more information, see:
  http://www.ks.uiuc.edu/Research/biocore/
  http://www.ks.uiuc.edu/Research/namd/
  http://www.ks.uiuc.edu/Research/vmd/
  http://www.ks.uiuc.edu/Research/jmv/
  http://www.ks.uiuc.edu/Development/biosoftdb/
  http://www.ks.uiuc.edu/Development/MDTools/

The VMD project is funded by the National Institutes of Health
(grant number PHS 5 P41 RR05969).


Disclaimer and Copyright
------------------------
  VMD is Copyright (c) 1995-2007 the Board of Trustees of the 
University of Illinois and others.

The terms for using, copying, modifying, and distributing VMD are
specified in the file LICENSE. If you use VMD in a way you think is
interesting or novel, we would like to know about it.

The authors request that any published work which utilizes VMD 
includes a reference to the VMD web page:
  http://www.ks.uiuc.edu/Research/vmd/

and/or the following reference:
  Humphrey, W., Dalke, A. and Schulten, K., "VMD - Visual Molecular
  Dynamics", J. Molec. Graphics, 1996, vol. 14, pp. 33-38.


Documentation
-------------
  The VMD Installation Guide, User's Guide, and Programmer's Guide 
are available which describe how to install, use, and modify VMD.  
All three guides are available from the main web site.
Online help may be accessed via the "Help" menu in the main VMD window 
or by typing help in the VMD command window.  This will bring up the VMD
quick help page in a browser, and will lead you to several other VMD help 
files and manuals. 


Quick Installation Instructions
-------------------------------
Detailed instructions for compiling VMD from source code
can be found in the programmer's guide.

The Windows version of VMD is distributed as a self-extracting 
archive, and should be entirely self explanatory.  

The native MacOS X version of VMD is packaged as a disk image and is
extracted by opening the disk image, and dragging the "VMD" application
contained inside into an appropriate directory.

For quick installation of the binary distribution for Unix do the following:
  1) Uncompress and untar the distribution into a working directory.
     In this working directory, there are several subdirectories such 
     as bin, src, doc, data, as well as this README and a configure script.  
     Change to this working directory after the unpacking is complete.

  2) Edit the file 'configure'; change the values for
     the $install_library_dir and $install_bin_dir to a directory in 
     which vmd data files and executables should be installed, be sure
     that you installing into a clean target directory and not overwriting
     an existing version of VMD (which would otherwise give problems):

     $install_bin_dir is the location of the startup script 'vmd'.  
     It should be located in the path of users interested in running VMD.

     $install_library_dir is the location of all other VMD files.  
     This included the binary and helper scripts.  It should not be 
     in the path.

  3) A Makefile must be generated based on these configuration variables
     by running "./configure". 

  4) After configuration is complete, cd to the src directory,
     and type "make install".  This will install VMD in the two
     directories listed above.  Note that running "make install" 
     twice will print error messages because you are attempting to 
     overwrite some read-only files.  Similarly, if you have incorrectly
     specified the target installation directories or attempt to overwrite
     an existing VMD installation, you will get error messages.

  5) When installed, type 'vmd' to start (make sure the
     $install_bin_dir directory is in your path).


Required Libraries
------------------
  VMD requires several libraries and programs for various of its functions.
In particular, it uses GL or OpenGL based 3-D rendering, and will require
that you have the appropriate GL or OpenGL libraries on your system.  
Other programs are required by some of VMD's optional features.
Please visit the VMD web site for more information:
  http://www.ks.uiuc.edu/Research/vmd/

For problems, questions, or suggestions, send e-mail to 'vmd@ks.uiuc.edu'.
  VMD Development Team
  Theoretical and Computational Biophysics Group
  University of Illinois and Beckman Institute
  405 N. Matthews
  Urbana, IL  61801
  TBG: http://www.ks.uiuc.edu/
  VMD: http://www.ks.uiuc.edu/Research/vmd/


README for VMD; last modified April 2, 2007 by John Stone


