#!/usr/bin/env python

import os
import modreax
from unit import Unit
import utility


class ReaxForceEngine:
    def __init__(self, natoms, ffFile, rnum=2321323.1):
        self.readForceFieldFile(ffFile)
        os.system('echo %d.1 > fort.35' % rnum)
        modreax.pyinit(30, 30, 30, 90, 90, 90)
        self.natoms = natoms
        modreax.setnatoms(natoms)
        modreax.setaxis(1, 30.0)
        modreax.setaxis(2, 30.0)
        modreax.setaxis(3, 30.0)
        return

    def reset(self):
        pass


    def readForceFieldFile(self, filename):
        os.system('cp %s fort.4' % filename)
        return



    def setupEnergyExpression(self, coords, fixed, charges, fftypes, blist, bolist):
        for i in range(self.natoms):
            
            x = coords[3*i]
            y = coords[3*i+1]
            z = coords[3*i+2]
            
            anumber = utility.sym2no[utility.fftype2element(fftype[i])]
            
            modreax.setpos(1, i+1, x)
            modreax.setpos(2, i+1, y)
            modreax.setpos(3, i+1, z)
            
            modreax.setatomicnumber(i+1, anumber)
            modreax.setcharge(i+1, 0.0)
        return 


    def setCoords(self, coords):
        """
        Copy positions from modbabel to reax.
        """
       
        for i in range(self.natoms):
            x = coords[3*i]
            y = coords[3*i+1]
            z = coords[3*i+2]
            
            modreax.setpos(1, i+1, x)
            modreax.setpos(2, i+1, y)
            modreax.setpos(3, i+1, z)
        return             
   

    def calcEnergyForce(self):
        modreax.pyencalc()
        return



    def getEnergy(self):
        return modreax.get_estr() + modreax.get_eb() + \
               modreax.get_ea() + modreax.get_ev()
       

    def getForces(self):
        unit = Unit()
        natoms = self.natoms
        forces = [0.0 for i in range(3*natoms)]
        for i in range(natoms):
            forces[3*i] = modreax.getforce(1, i+1) * unit.kcalpermol        
            forces[3*i+1] = modreax.getforce(2, i+1) * unit.kcalpermol
            forces[3*i+2] = modreax.getforce(3, i+1) * unit.kcalpermol
        return forces


    def calcValenceEnergyForce(self):
        modreax.pyencalc()
        return


    










